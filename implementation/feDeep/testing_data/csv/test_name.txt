1 * * * * format * c s v format * c s v printer 
2 * * simple token lexer * c s v lexer * * * * token 
2 * * simple token lexer * c s v lexer * * * * type 
2 * * simple token lexer * c s v lexer * * extended buffered reader 
3 * * encapsulated token lexer * c s v lexer * * extended buffered reader 
3 * * encapsulated token lexer * c s v lexer * * * * token 
3 * * encapsulated token lexer * c s v lexer * * * * type 
4 * * * get record * c s v parser * * * * token 
4 * * * get record * c s v parser * * * * lexer 
4 * * * get record * c s v parser * * * * type 
5 * * * initialize header * c s v parser * c s v format 
5 * * * initialize header * c s v parser * c s v record 
6 * * get line number * c s v parser * * * * lexer 
7 * * * * println * c s v printer * c s v format 
8 * * * print comment * c s v printer * c s v format 
9 * * * * print * c s v printer * c s v format 
10 * * * print sep * c s v printer * c s v format 
11 * * print and escape * c s v printer * c s v format 
12 * * print and encapsulate * c s v printer * c s v format 
13 * * get line number * * * * lexer * * extended buffered reader 
14 * * * read escape * * * * lexer * * extended buffered reader 
15 * * * is whitespace * * * * lexer * c s v format 
16 * is end of line * * * * lexer * * extended buffered reader 
17 * is end of file * * * * lexer * * extended buffered reader 
18 * * * * reset * * * * token * * * * type 
